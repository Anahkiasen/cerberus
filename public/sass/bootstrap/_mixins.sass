//
// Mixins
// --------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
=clearfix-bootstrap
  *zoom: 1
  &:before,
  &:after
    display: table
    content: ""
  &:after
    clear: both

// Webkit-style focus
// ------------------
=tab-focus
  // Default
  outline: thin dotted #333
  // Webkit
  outline: 5px auto -webkit-focus-ring-color
  outline-offset: -2px

// Center-align a block level element
// ----------------------------------
=center-block
  display: block
  margin-left: auto
  margin-right: auto

// IE7 inline-block
// ----------------
=ie7-inline-block
  *display: inline // IE7 inline-block hack
  *zoom: 1

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
=ie7-restore-left-whitespace
  *margin-left: .3em
  &:first-child
    *margin-left: 0

=ie7-restore-right-whitespace
  *margin-right: .3em
  &:last-child
    *margin-left: 0

// Sizing shortcuts
// -------------------------
=size($height, $width)
  width: $width
  height: $height

=square($size)
  +size($size, $size)

// Placeholder text
// -------------------------
=placeholder($color: $placeholderText)
  *
    +input-placeholder
      color: $color

// FONTS
// --------------------------------------------------

=font-family-serif
  font-family: $serifFontFamily

=font-family-sans-serif
  font-family: $sansFontFamily

=font-family-monospace
  font-family: $monoFontFamily

=font-shorthand($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight)
  font-size: $size
  font-weight: $weight
  line-height: $lineHeight

=font-serif($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight)
  +font-family-serif
  +font-shorthand($size, $weight, $lineHeight)

=font-sans-serif($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight)
  +font-family-sans-serif
  +font-shorthand($size, $weight, $lineHeight)

=font-monospace($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight)
  +font-family-monospace
  +font-shorthand($size, $weight, $lineHeight)

// FORMS
// --------------------------------------------------

// Block level inputs
=input-block-level
  display: block
  width: 100%
  min-height: 28px        // Make inputs at least the height of their button counterpart
  +box-sizing(border-box) // Makes inputs behave like true block-level elements

// Mixin for form field states
=formFieldState($textColor: #555555, $borderColor: #cccccc, $backgroundColor: whitesmoke)

  // Set the text color
  > label,
  .help-block,
  .help-inline
    color: $textColor

  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea
    color: $textColor
    border-color: $borderColor
    &:focus
      border-color: darken($borderColor, 10%)
      +box-shadow(0 0 6px lighten($borderColor, 20%))

  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on
    color: $textColor
    background-color: $backgroundColor
    border-color: $textColor

// CSS3 PROPERTIES
// --------------------------------------------------

// Resize anything
=resizable($direction)
  resize: $direction // Options: horizontal, vertical, both
  overflow: auto // Safari fix

// Optional hyphenation
=hyphens($mode: auto)
  word-wrap: break-word
  +experimental(hyphens, $mode, -moz, -webkit, -o, -ms, not -khtml, official)

// BACKGROUNDS
// --------------------------------------------------

// Gradient Bar Colors for buttons and alerts
=gradientBar($primaryColor, $secondaryColor)
  +gradient-vertical($primaryColor, $secondaryColor)
  border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%)
  border-color: rgba(black, 0.1) rgba(black, 0.1) fadein(rgba(black, 0.1), 15%)

// Gradients
=gradient-horizontal($startColor: #555555, $endColor: #333333)
  background-color: $endColor
  +background-image(linear-gradient(left, $startColor, $endColor))
  background-repeat: repeat-x

=gradient-vertical($startColor: #555555, $endColor: #333333)
  background-color: mix($startColor, $endColor, 60%)
  +background-image(linear-gradient(top, $startColor, $endColor))
  background-repeat: repeat-x

=gradient-directional($startColor: #555555, $endColor: #333333, $deg: 45deg)
  background-color: $endColor
  +filter-gradient($startColor, $endColor, horizontal)
  +background-image(linear-gradient(left bottom, $startColor 0%, $endColor 100%))

=gradient-vertical-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f)
  background-color: mix($midColor, $endColor, 80%)
  +background-image(linear-gradient($startColor, $midColor $colorStop, $endColor))
  background-repeat: no-repeat

=gradient-radial($innerColor: #555555, $outerColor: #333333)
  background-color: $outerColor
  +background-image(radial-gradient(circle, $innerColor, $outerColor))
  background-repeat: no-repeat

=gradient-striped($color, $angle: 45deg)
  background-color: $color
  +background-image(linear-gradient($angle, color-stops(rgba(white, .15) 25%, transparent 25%, transparent 50%, rgba(white, .15) 50%, rgba(white, .15) 75%, transparent 75%, transparent)))

// Reset filters for IE
=reset-filter
  filter: "progid:DXImageTransform.Microsoft.gradient(enabled = false)"

// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
=nav-divider($top: #e5e5e5, $bottom: $white)
  // IE7 needs a set width since we gave a height. Restricting just
  // to IE7 to keep the 1px left/right space in other browsers.
  // It is unclear where IE is getting the extra space that we need
  // to negative-margin away, but so it goes.
  *width: 100%
  height: 1px
  margin: (($baseLineHeight / 2) - 1) 1px // 8px 1px
  *margin: -5px 0 5px
  overflow: hidden
  background-color: $top
  border-bottom: 1px solid $bottom

// Button backgrounds
// ------------------

=buttonBackground($startColor, $endColor)
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  +gradientBar($startColor, $endColor)
  *background-color: $endColor /* Darken IE7 buttons by default so they stand out more given they won't have borders */
  +reset-filter

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:active, &.active, &.disabled, &[disabled]
    background-color: $endColor
    *background-color: darken($endColor, 5)

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active
    background-color: darken($endColor, 10) "\9"

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `@include navbarVerticalAlign(30px)` to calculate the appropriate top margin.
=navbarVerticalAlign($elementHeight)
  margin-top: ($navbarHeight - $elementHeight) / 2

// Popover arrows
// -------------------------
// For tipsies and popovers
=popoverArrow-top($arrowWidth: 10px, $color: rgba(black, .2))
  bottom: -$arrowWidth
  left: 50%
  margin-left: -$arrowWidth
  border-left: $arrowWidth solid transparent
  border-right: $arrowWidth solid transparent
  border-top: $arrowWidth solid #ccc
  border-top: $arrowWidth solid $color
  &:after
    border-left: $arrowWidth - 1 solid transparent
    border-right: $arrowWidth - 1 solid transparent
    border-top: $arrowWidth - 1 solid #fff
    bottom: 1px
    left: -$arrowWidth + 1

=popoverArrow-right($arrowWidth: 10px, $color: rgba(black, .2))
  top: 50%
  left: -$arrowWidth
  margin-top: -$arrowWidth
  border-top: $arrowWidth solid transparent
  border-bottom: $arrowWidth solid transparent
  border-right: $arrowWidth solid #ccc
  border-right: $arrowWidth solid $color
  &:after
    border-top: $arrowWidth - 1 solid transparent
    border-bottom: $arrowWidth - 1 solid transparent
    border-right: $arrowWidth - 1 solid #fff
    bottom: -$arrowWidth + 1
    left: 1px

=popoverArrow-bottom($arrowWidth: 10px, $color: rgba(black, .2))
  top: -$arrowWidth
  left: 50%
  margin-left: -$arrowWidth
  border-left: $arrowWidth solid transparent
  border-right: $arrowWidth solid transparent
  border-bottom: $arrowWidth solid #ccc
  border-bottom: $arrowWidth solid $color
  &:after
    border-left: $arrowWidth - 1 solid transparent
    border-right: $arrowWidth - 1 solid transparent
    border-bottom: $arrowWidth - 1 solid #f5f5f5
    top: 1px
    left: -$arrowWidth + 1

=popoverArrow-left($arrowWidth: 10px, $color: rgba(black, .2))
  top: 50%
  right: -$arrowWidth
  margin-top: -$arrowWidth
  border-top: $arrowWidth solid transparent
  border-bottom: $arrowWidth solid transparent
  border-left: $arrowWidth solid #ccc
  border-left: $arrowWidth solid $color
  &:after
    border-top: $arrowWidth - 1 solid transparent
    border-bottom: $arrowWidth - 1 solid transparent
    border-left: $arrowWidth - 1 solid #fff
    bottom: -$arrowWidth + 1
    right: 1px

// Grid System
// -----------

// Centered container element
=container-fixed
  margin-right: auto
  margin-left: auto
  +clearfix

// Table columns
=tableColumns($columnSpan: 1)
  float: none // undo default grid column styles
  width: $gridColumnWidth * $columnSpan + $gridGutterWidth * ($columnSpan - 1) - 16 // 16 is total padding on left and right of table cells
  margin-left: 0 // undo default grid column styles

// Make a Grid
// Use .makeRow and .makeColumn to assign semantic layouts grid system behavior
=makeRow
  margin-left: $gridGutterWidth * -1
  +clearfix

=makeColumn($columns: 1, $offset: 0)
  float: left
  margin-left: ($gridColumnWidth * $offset) + ($gridGutterWidth * ($offset - 1)) + ($gridGutterWidth * 2)
  width: $gridColumnWidth * $columns + $gridGutterWidth * ($columns - 1)

// The Grid

// Fixed grid

=grid-core-generate($gridColumnWidth, $gridGutterWidth)
  .row
    margin-left: $gridGutterWidth * -1
    +clearfix

  [class*="span"]
    float: left
    margin-left: $gridGutterWidth

  // Set the container width, and override it for fixed navbars in media queries
  .container,
  .navbar-fixed-top .container,
  .navbar-fixed-bottom .container
    +grid-core-span($gridColumns, $gridColumnWidth, $gridGutterWidth)

  // generate .spanX and .offsetX
  @for $index from 1 through $gridColumns
    .span#{$index}
      +grid-core-span($index, $gridColumnWidth, $gridGutterWidth)
  @for $index from 1 through $gridColumns
    .offset#{$index}
      +grid-core-offset($index, $gridColumnWidth, $gridGutterWidth)

// Span and offsets functions
=grid-core-offset($columns, $columnWidth: $gridColumnWidth, $gutterWidth: $gridGutterWidth)
  margin-left: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns + 1))

=grid-core-span($columns, $columnWidth: $gridColumnWidth, $gutterWidth: $gridGutterWidth)
  width: ($columnWidth * $columns) + ($gutterWidth * ($columns - 1))

// Fluid grid
=grid-fluid-generate($gridColumnWidth, $gridGutterWidth)
  $gridRowWidth: ($gridColumns * $fluidGridColumnWidth) + ($fluidGridGutterWidth * ($gridColumns - 1))

  .row-fluid
    width: 100%
    +clearfix

    [class*="span"]
      +input-block-level
      float: left
      margin-left: $fluidGridGutterWidth
      *margin-left: $fluidGridGutterWidth
      &:first-child
        margin-left: 0

    // generate .spanX and .offsetX
    @for $index from 1 through $gridColumns
      .offset#{$index}
        +grid-fluid-offset($index)

      .offset#{$index}:first-child
        +grid-fluid-offsetFirstChild($index)

      .span#{$index}
        +grid-fluid-span($index)

=grid-fluid-span($columns, $columnWidth: $fluidGridColumnWidth, $gutterWidth: $fluidGridGutterWidth)
  width: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1))
  *width: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) - (.5 / $gridRowWidth * 100 * 1%)

=grid-fluid-offset($columns, $columnWidth: $fluidGridColumnWidth, $gutterWidth: $fluidGridGutterWidth)
  margin-left: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) + ($fluidGridGutterWidth*2)
  *margin-left: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) - (.5 / $gridRowWidth * 100 * 1%) + ($fluidGridGutterWidth*2) - (.5 / $gridRowWidth * 100 * 1%)

=grid-fluid-offsetFirstChild($columns, $columnWidth: $fluidGridColumnWidth, $gutterWidth: $fluidGridGutterWidth)
  margin-left: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) + ($fluidGridGutterWidth)
  *margin-left: ($fluidGridColumnWidth * $columns) + ($fluidGridGutterWidth * ($columns - 1)) - (.5 / $gridRowWidth * 100 * 1%) + $fluidGridGutterWidth - (.5 / $gridRowWidth * 100 * 1%)

// Input grid

=grid-input-generate($gridColumnWidth, $gridGutterWidth)
  input,
  textarea,
  .uneditable-input
    margin-left: 0 // override margin-left from core grid system

  // generate .spanX and .offsetX
  @for $index from 1 through $gridColumns
    input.span#{$index}, textarea.span#{$index}, .uneditable-input.span#{$index}
      +grid-input-span($index, $gridColumnWidth, $gridGutterWidth)

=grid-input-span($columns, $columnWidth: $gridColumnWidth, $gutterWidth: $gridGutterWidth)
  width: $columnWidth * $columns + $gutterWidth * ($columns - 1) - 10